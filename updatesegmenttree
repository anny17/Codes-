#include<bits/stdc++.h>
using namespace std;

void buildtree(int* arr, int* tree,int start,int end,int treenode)
{
    if(start == end)
    {
        tree[treenode] = arr[start];
        return;
    }
    int mid = (start + end)/2;
    buildtree(arr, tree, start, mid, 2*treenode);
    buildtree(arr, tree, mid+1, end, 2*treenode+1);

    tree[treenode] = tree[2*treenode] + tree[2*treenode + 1];

}
void updatetree(int* arr,int *tree,int start,int end,int trenode,int idx,int value)
{
    if(start == end)
    {
        arr[idx] = value;
        tree[trenode] = value;
        return;
    }
    int mid = (start+end)/2;
    if(idx > mid)
    {
        updatetree(arr, tree, mid+1, end, 2*trenode+1, idx, value);
    }else
    {
           updatetree(arr,tree,start,mid,2*trenode,idx,value);
    }
    tree[trenode] = tree[2*trenode] + tree[2*trenode+1];
}
int main()
{
    int arr[] = {1,2,3,4,5,6,7,8,9};
    int* tree = new int[18];
    buildtree(arr, tree, 0, 8, 1);
    for(int i = 1; i < 18; i ++)
    {
        cout << tree[i] << " ";
    }
    cout << endl ;

    updatetree(arr, tree, 0, 4, 1, 2, 10);
    for(int i = 1; i < 18; i ++)
    {
        cout << tree[i] << " ";
    }
    cout << endl ;

}
