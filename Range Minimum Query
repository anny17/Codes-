    #include<bits/stdc++.h>
    using namespace std;
     
    #define ll long long int
    #define pb push_back
    #define mkp make_pair
    ll n;
    const ll N=1e5;
    ll v[4*N];
    void build(ll node,ll start,ll end,ll a[])
    {
        if(start==end)
        {
            v[node]=a[start];
        }
        else
        {
            ll mid=(start+end)/2;
            build(2*node+1,start,mid,a);
            build(2*node+2,mid+1,end,a);
                v[node]=min(v[2*node+1],v[2*node+2]);
     
        }
    }
    ll query(ll nd,ll s,ll e,ll l,ll r)
    {
        if(r<s or l>e)
        {
            return INT_MAX;
        }
        if(l<=s and e<=r)
        {
            return v[nd];
        }
        ll m=(s+e)/2;
        ll p1=query(2*nd+1,s,m,l,r);
        ll p2=query(2*nd+2,m+1,e,l,r);
        return (min(p1,p2));
    }
    void up(ll nd,ll idx,ll val,ll s,ll e,ll a[])
    {
        if(s==e)
        {
            a[idx]=val;
            v[nd]=val;
        }
        else
        {
            ll m=(s+e)/2;
            if(idx<=m and s<=idx)
            {
                up(2*nd+1,idx,val,s,m,a);
            }
            else
            {
                up(2*nd+2,idx,val,m+1,e,a);
               
            }
            v[nd]=min(v[2*nd+1],v[2*nd+2]);
        }
    }
    int main()
    {
        cin>>n;
        ll q;
        cin>>q;
        ll a[N];
        for(ll i=0;i<n;i++)
        cin>>a[i];
        build(0,0,n-1,a);
        while(q--)
        {
        char c;
        cin>>c;
        if(c=='q')
        {
            ll x,y;
            cin>>x>>y;
            cout<<query(0,0,n-1,x-1,y-1)<<endl;
        }
        else
        {
            ll x,y;
            cin>>x>>y;
            up(0,x-1,y,0,n-1,a);
        }
        }
        return 0;
    }
